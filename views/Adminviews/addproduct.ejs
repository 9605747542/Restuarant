<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="author" content="DexignZone">
	<meta name="robots" content="">
	<meta name="keywords" content="admin dashboard, admin template, administration, analytics, bootstrap, cafe admin, elegant, food, health, kitchen, modern, responsive admin dashboard, restaurant dashboard">
	<meta name="description" content="Discover Davur - the ultimate admin dashboard and Bootstrap 5 template. Specially designed for professionals, and for business. Davur provides advanced features and an easy-to-use interface for creating a top-quality website with frontend">
	<meta property="og:title" content="Davur : Restaurant Admin Dashboard + FrontEnd">
	<meta property="og:description" content="Discover Davur - the ultimate admin dashboard and Bootstrap 5 template. Specially designed for professionals, and for business. Davur provides advanced features and an easy-to-use interface for creating a top-quality website with frontend">
	<meta property="og:image" content="https://davur.dexignzone.com/xhtml/social-image.png">
	<meta name="format-detection" content="telephone=no">
	
	<!-- Mobile Specific -->
	<meta name="viewport" content="width=device-width, initial-scale=1">
	
	 <link rel="icon" type="image/png" sizes="16x16" href="admin-assets/images/favicon.png">
	
	<!-- Title -->
	<title>PLAZA PLATE</title>
    <!-- Favicon icon -->
	<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <link href="admin-assets/vendor/bootstrap-select/dist/css/bootstrap-select.min.css" rel="stylesheet">
	<link href="admin-assets/vendor/datatables/css/jquery.dataTables.min.css" rel="stylesheet">
    <link href="admin-assets/css/style.css" rel="stylesheet">
	<link href="https://cdn.lineicons.com/2.0/LineIcons.css" rel="stylesheet">

</head>
<style>
	/* #body {
		display: flex;
		justify-content: flex-end;
		padding: 20px;
	} */
 #previewContainer {
		display: flex;
		flex-direction: column;
		align-items: flex-end;
	} 

	#imagePreview {
		max-width: 300px;
		margin-top: 10px;
	} 

	#imageContainer{
		display: flex;
	}
</style>
<body>

    <!--*******************
        Preloader start
    ********************-->
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>
    <!--*******************
        Preloader end
    ********************-->
            <!-- Content body start
        *********************************** -->
		<div class="content-wrapper">
			<div class="container-fluid">
				<div class="row">
					<form enctype="multipart/form-data">
					<div class="col-xl-2 col-md-12">
						
						
							<div class="row">
								<div class="col-xl-12 col-sm-6">
									<div class="upload-item-box">
										<label for="image" class="form-label"><br>
											<i class="fas fa-images"></i> <br>Upload items image
										</label>
										<input type="file" class="form-control" id="image" name="image" multiple="multiple">
									</div>
								</div>
							</div>
					</div>
				
					<div class="col-xl-10 col-md-12">
						<div class="row">
							<div class="col-xl-7 col-lg-7 col-md-6">
								<div class="card">
									<div class="card-header">
										<h4 class="card-title">Upload an item</h4>
									</div>
									<div class="card-body">
										<div class="mb-3 pb-3">
											<label for="productname" class="form-label font-w600">Food Name</label>
											<input type="text" class="form-control" id="productname" name="productName" placeholder="Cheese burger" required>
										</div>
										<div class="mb-3 pb-3">
											<label for="price" class="form-label font-w600">Food Price</label>
											<input type="number" class="form-control" id="price" name="price" placeholder="Cheese burger"required>
										</div>
										<div class="mb-3 pb-3">
											<label for="stock" class="form-label font-w600">Stock</label>
											<input type="number" class="form-control" id="stocks" name="stock" placeholder="23">

										</div>

										<div class="mb-3 pb-3">
											<label for="category" class="form-label font-w600">Select Category</label>
											<select class="form-select" id="category" name="category">
												<option value="">Select Category</option>
												<% for(let i = 0; i < data.length; i++) { %>
													<option value="<%= data[i].categoryName %>"><%= data[i].categoryName %></option>
												<% } %>
											</select>

										</div>
										

										<div class="mb-3 pb-3">
											<label for="description" class="form-label font-w600">Item description</label>
											<textarea class="form-control" id="description" name="description" rows="5"required></textarea>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					
					<div class="col-xl-2 col-md-12">
						<div id="imageContainer" style="height: 0; padding-top: 100%; position: relative;">
							<div id="previewContainer" style="position: absolute; top: 0; left: 0; right: 0; bottom: 0;">
								<h6 style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">Image reviews</h6>
							</div>
						</div>
					</div>
					<div class="card-footer">
						<!-- <button type="button" class="btn btn-primary btn-block rounded" id="cropButton">Crop Image</button> -->
						<button class="btn btn-primary btn-block rounded" id="validate">Upload Items</button>
					</div>
					</form> 
			
				</div>
				
				
			
				
			</div>
			
		</div>
		
		
		
        <!--**********************************
            Content body end
        ***********************************-->

        <!--**********************************
            Footer start
        ***********************************-->
        <div class="footer p-0">
            <div class="copyright">
                <p>Copyright Â© Designed &amp; Developed by <a href="http://dexignzone.com/" target="_blank">DexignZone</a> 2023</p>
            </div>
        </div>
        <!--**********************************
            Footer end
        ***********************************-->

		<!--**********************************
           Support ticket button start
        ***********************************-->

        <!--**********************************
           Support ticket button end
        ***********************************-->


    </div>
    <!--**********************************
        Main wrapper end
    ***********************************-->

    <!--**********************************
        Scripts
    ***********************************-->
    <!-- Required vendors -->
	<script>
		//  document.getElementById('image').addEventListener('change', function (event) {
        //      const imagePreviewContainer = document.getElementById('previewContainer');
        //      const fileInput = event.target;

        //     if (fileInput.files && fileInput.files.length > 0) {
		// 		for (let i = 0; i < fileInput.files.length; i++) {
        //         const reader = new FileReader();
		// 		const imagePreviewContainer = document.createElement('div');
        //             imagePreviewContainer.classList.add('imagePreview');

        //        reader.onload = function (e) {
        //            imagePreviewContainer.innerHTML = `<img src="${e.target.result}" style="max-width: 100%;">`;
        //              imagePreviewContainer.style.display = 'block';
        //          };

        //          reader.readAsDataURL(fileInput.files[i]);
		//  		previewContainer.appendChild(imagePreviewContainer);
        //      }
		//  }
        // });

		// let cropper;
		// let croppedBlob;

		// document.getElementById('image').addEventListener('change', function(event) {
        //     const fileInput = event.target;
        //     const previewContainer = document.getElementById('previewContainer');
        //     previewContainer.innerHTML = ''; // Clear previous images

        //     if (fileInput.files && fileInput.files.length > 0) {
        //         const file = fileInput.files[0];
        //         const reader = new FileReader();

        //         reader.onload = function(e) {
        //             const img = document.createElement('img');
        //             img.src = e.target.result;
        //             img.style.maxWidth = '100%';
        //             img.id = 'imageToCrop';

        //             previewContainer.appendChild(img);

        //             // Initialize cropper
        //             cropper = new Cropper(img, {
        //                 aspectRatio: 1, // Adjust aspect ratio as needed
        //                 viewMode: 1,
        //                 autoCropArea: 1,
        //                 movable: true,
        //                 zoomable: true,
        //                 rotatable: true,
        //                 scalable: true,
        //             });

        //             // Add a button to confirm the crop
        //             const cropButton = document.createElement('button');
        //             cropButton.textContent = 'Crop Image';
        //             cropButton.onclick = function() {
        //                 const canvas = cropper.getCroppedCanvas({
        //                     width: 200, // Adjust width as needed
        //                     height: 200 // Adjust height as needed
        //                 });

        //                 canvas.toBlob(function(blob) {
        //                     croppedBlob = blob;
        //                     const croppedImg = document.createElement('img');
        //                     croppedImg.src = URL.createObjectURL(blob);
        //                     previewContainer.innerHTML = ''; // Clear the container
        //                     previewContainer.appendChild(croppedImg); // Display cropped image
        //                 }, 'image/jpeg');
        //             };

        //             previewContainer.appendChild(cropButton);
        //         };

        //         reader.readAsDataURL(file);
        //     }
        // });


	// 	let cropper;
    //     let croppedBlob;

    //     document.getElementById('image').addEventListener('change', function(event) {
    //         const fileInput = event.target;
    //         const previewContainer = document.getElementById('previewContainer');
    //         previewContainer.innerHTML = ''; // Clear previous images

    //         if (fileInput.files && fileInput.files.length > 0) {
    //             const file = fileInput.files[0];
    //             const reader = new FileReader();

    //             reader.onload = function(e) {
    //                 const img = document.createElement('img');
    //                 img.src = e.target.result;
    //                 img.style.maxWidth = '100%';
    //                 img.id = 'imageToCrop';

    //                 previewContainer.appendChild(img);

    //                 // Initialize cropper
    //                 cropper = new Cropper(img, {
    //                     aspectRatio: 1, // Adjust aspect ratio as needed
    //                     viewMode: 1,
    //                     autoCropArea: 1,
    //                     movable: true,
    //                     zoomable: true,
    //                     rotatable: true,
    //                     scalable: true,
    //                 });
    //             };

    //             reader.readAsDataURL(file);
    //         }
    //     });

    //     document.getElementById('cropButton').addEventListener('click', function() {
    //         if (cropper) {
    //             const canvas = cropper.getCroppedCanvas({
    //                 width: 200, // Adjust width as needed
    //                 height: 200 // Adjust height as needed
    //             });

    //             canvas.toBlob(function(blob) {
    //                 croppedBlob = blob;
    //                 const croppedImg = document.createElement('img');
    //                 croppedImg.src = URL.createObjectURL(blob);
    //                 const previewContainer = document.getElementById('previewContainer');
    //                 previewContainer.innerHTML = ''; // Clear the container
    //                 previewContainer.appendChild(croppedImg); // Display cropped image
    //             }, 'image/jpeg');
    //         }
    //     });


	



	






	// document.getElementById('validate').addEventListener('click',async(e)=>{
	// 	e.preventDefault();

	// 	console.log("MAHN");
    
    //     const productName = document.getElementById('productname').value;
    //     console.log(productName);
    //     const price = document.getElementById('price').value;
    //     const description = document.getElementById('description').value;
    //     const stock = document.getElementById('stocks').value;
    //     console.log(stock);
    //     const category = document.getElementById('category').value;
		

    //     if (productName === '' || price === '' || stock === '' || description === '' || category==='') {
    //         Swal.fire({
    //             title: 'Error!',
    //             text: "Please Enter the required fields",
    //             icon: 'error'
    //         });
    //         return;
    //     }
	// 	try {

    //     const formdata = {
    //         productName,
    //         price,
    //         description,
    //         stock,
    //         category
    //     };
	// 	const croppedImage = document.getElementById('image').dataset.croppedImage;
    //         if (croppedImage) {
	// 			console.log("another");
    //             formData.append('ProductImages', croppedImage);
    //         }

    //     console.log(formdata.stock);
	// 	console.log("Form Data",formdata);

    //     const response = await fetch('/postaddproduct', {
    //         method: 'POST',
    //         headers: {
    //             'Content-Type': 'application/json'
    //         },
    //         body: JSON.stringify(formdata)
    //     });
    //         const data = await response.json();
	// 		console.log(data);
    //         if (data.success === true) {
    //             Swal.fire({
    //                 title: 'Success!',
    //                 text: data.message,
    //                 icon: 'success'
    //             });
				
    //         } else {
    //             Swal.fire({
    //                 title: 'Error!',
    //                 text: data.message,
    //                 icon: 'error'
    //             });
    //         }
        
    // } catch (error) {
    //     Swal.fire({
    //         title: 'Error!',
    //         text: 'An error occurred while processing the request.',
    //         icon: 'error'
    //     });
    //     console.error("An error occurred while processing the request:", error);
    // }

	// })



// 	document.addEventListener('DOMContentLoaded', function() {
//     const imageInput = document.getElementById('image');
//     const previewContainer = document.getElementById('previewContainer');
//     const cropButton = document.getElementById('cropButton');
//     const validateButton = document.getElementById('validate');


// 	let cropper;
// let croppedBlob;

// document.getElementById('image').addEventListener('change', function(event) {
//     const fileInput = event.target;
//     const previewContainer = document.getElementById('previewContainer');
//     previewContainer.innerHTML = ''; // Clear previous images

//     if (fileInput.files && fileInput.files.length > 0) {
//         const file = fileInput.files[0];
//         const reader = new FileReader();

//         reader.onload = function(e) {
//             const img = document.createElement('img');
//             img.src = e.target.result;
//             img.style.maxWidth = '100%';
//             img.id = 'imageToCrop';

//             previewContainer.appendChild(img);

//             // Initialize cropper
//             cropper = new Cropper(img, {
//                 aspectRatio: 1, // Adjust aspect ratio as needed
//                 viewMode: 1,
//                 autoCropArea: 1,
//                 movable: true,
//                 zoomable: true,
//                 rotatable: true,
//                 scalable: true,
//             });
//         };

//         reader.readAsDataURL(file);
//     }
// });
// console.log();

// document.getElementById('cropButton').addEventListener('click', function() {
//     if (cropper) {
//         const canvas = cropper.getCroppedCanvas({
//             width: 200, // Adjust width as needed
//             height: 200 // Adjust height as needed
//         });

//         canvas.toBlob(function(blob) {
//             croppedBlob = blob;
//             const croppedImg = document.createElement('img');
//             croppedImg.src = URL.createObjectURL(blob);
//             const previewContainer = document.getElementById('previewContainer');
//             previewContainer.innerHTML = ''; // Clear the container
//             previewContainer.appendChild(croppedImg); // Display cropped image
//         }, 'image/jpeg');
//     }
// });

// validateButton.addEventListener('click',async(e)=>{
// 	e.preventDefault();
  
// 	console.log("data");

//     const productName = document.getElementById('productname').value;
//     const price = document.getElementById('price').value;
//     const description = document.getElementById('description').value;
//     const stock = document.getElementById('stocks').value;
//     const category = document.getElementById('category').value;

//     if (productName === '' || price === '' || stock === '' || description === '' || category === '') {
//         Swal.fire({
//             title: 'Error!',
//             text: "Please enter the required fields",
//             icon: 'error'
//         });
//         return;
//     }

//     const formData = new FormData();
//     formData.append('productName', productName);
//     formData.append('price', price);
//     formData.append('description', description);
//     formData.append('stock', stock);
//     formData.append('category', category);

//     if (croppedBlob) {
//         formData.append('ProductImages', croppedBlob, 'croppedImage.jpg');
//     }

//     try {
//         const response = await fetch('/postaddproduct', {
//             method: 'POST',
//             body: formData
//         });
// 		console.log(response);
// 		console.log("mad");
//         const data = await response.json();
// 		console.log("data in the frontend",data);
//         if (data.success) {
//             Swal.fire({
//                 title: 'Success!',
//                 text: data.message,
//                 icon: 'success'
//             });
// 			window.location.href='/getproduct';
//         } else {
//             Swal.fire({
//                 title: 'Error!',
//                 text: data.message,
//                 icon: 'error'
//             });
//         }
//     } catch (error) {
//         Swal.fire({
//             title: 'Error!',
//             text: 'An error occurred while processing the request.',
//             icon: 'error'
//         });
//         console.error("An error occurred while processing the request:", error);
//     }
// });
// 	});



// document.addEventListener('DOMContentLoaded', function() {
//     const imageInput = document.getElementById('image');
//     const previewContainer = document.getElementById('previewContainer');
//     const cropButton = document.getElementById('cropButton');
//     const validateButton = document.getElementById('validate');

//     let cropper;
//     let croppedBlob;

//     imageInput.addEventListener('change', function(event) {
//         const fileInput = event.target;
//         previewContainer.innerHTML = ''; // Clear previous images

//         if (fileInput.files && fileInput.files.length > 0) {
//             const file = fileInput.files[0];
//             const reader = new FileReader();

//             reader.onload = function(e) {
//                 const img = document.createElement('img');
//                 img.src = e.target.result;
//                 img.style.maxWidth = '100%';
//                 img.id = 'imageToCrop';

//                 previewContainer.appendChild(img);

//                 // Initialize cropper
//                 cropper = new Cropper(img, {
//                     aspectRatio: 1, // Adjust aspect ratio as needed
//                     viewMode: 1,
//                     autoCropArea: 1,
//                     movable: true,
//                     zoomable: true,
//                     rotatable: true,
//                     scalable: true,
//                 });
//             };

//             reader.readAsDataURL(file);
//         }
//     });

//     cropButton.addEventListener('click', function() {
//         if (cropper) {
//             const canvas = cropper.getCroppedCanvas({
//                 width: 200, // Adjust width as needed
//                 height: 200 // Adjust height as needed
//             });

//             canvas.toBlob(function(blob) {
//                 croppedBlob = blob;
//                 const croppedImg = document.createElement('img');
//                 croppedImg.src = URL.createObjectURL(blob);
//                 previewContainer.innerHTML = ''; // Clear the container
//                 previewContainer.appendChild(croppedImg); // Display cropped image
//             }, 'image/jpeg');
//         }
//     });

//     validateButton.addEventListener('click', async function(e) {
//         e.preventDefault();

//         const productName = document.getElementById('productname').value;
//         const price = document.getElementById('price').value;
//         const description = document.getElementById('description').value;
//         const stock = document.getElementById('stocks').value;
//         const category = document.getElementById('category').value;

//         if (productName === '' || price === '' || stock === '' || description === '' || category === '') {
//             Swal.fire({
//                 title: 'Error!',
//                 text: "Please enter the required fields",
//                 icon: 'error'
//             });
//             return;
//         }

//         const formData = new FormData();
//         formData.append('productName', productName);
//         formData.append('price', price);
//         formData.append('description', description);
//         formData.append('stock', stock);
//         formData.append('category', category);

//         if (croppedBlob) {
//             formData.append('ProductImages', croppedBlob, 'croppedImage.jpg');
//         }

//         try {
//             const response = await fetch('/postaddproduct', {
//                 method: 'POST',
//                 body: formData
//             });

//             console.log(response);
//             const data = await response.json();
//             console.log("data in the frontend", data);
//             if (data.success) {
//                 Swal.fire({
//                     title: 'Success!',
//                     text: data.message,
//                     icon: 'success'
//                 });
//                 window.location.href = '/getproduct';
//             } else {
//                 Swal.fire({
//                     title: 'Error!',
//                     text: data.message,
//                     icon: 'error'
//                 });
//             }
//         } catch (error) {
//             Swal.fire({
//                 title: 'Error!',
//                 text: 'An error occurred while processing the request.',
//                 icon: 'error'
//             });
//             console.error("An error occurred while processing the request:", error);
//         }
//     });
// });

// document.addEventListener('DOMContentLoaded', function() {
//     const imageInput = document.getElementById('image');
//     const previewContainer = document.getElementById('previewContainer');
//     const validateButton = document.getElementById('validate');

//     let selectedFile;

//     imageInput.addEventListener('change', function(event) {
//         const fileInput = event.target;
//         previewContainer.innerHTML = ''; // Clear previous images

//         if (fileInput.files && fileInput.files.length > 0) {
//             const file = fileInput.files[0];
//             selectedFile = file;
//             const reader = new FileReader();

//             reader.onload = function(e) {
//                 const img = document.createElement('img');
//                 img.src = e.target.result;
//                 img.style.maxWidth = '100%';
//                 previewContainer.appendChild(img);
//             };

//             reader.readAsDataURL(file);
//         }
//     });

	//  document.getElementById('image').addEventListener('change', function (event) {
    //          const imagePreviewContainer = document.getElementById('previewContainer');
    //          const fileInput = event.target;

    //         if (fileInput.files && fileInput.files.length > 0) {
	// 			for (let i = 0; i < fileInput.files.length; i++) {
    //             const reader = new FileReader();
	// 			const imagePreviewContainer = document.createElement('div');
    //                 imagePreviewContainer.classList.add('imagePreview');

    //            reader.onload = function (e) {
    //                imagePreviewContainer.innerHTML = `<img src="${e.target.result}" style="max-width: 100%;">`;
    //                  imagePreviewContainer.style.display = 'block';
    //              };

    //              reader.readAsDataURL(fileInput.files[i]);
	// 	 		previewContainer.appendChild(imagePreviewContainer);
    //          }
	// 	 }
    //     });
    // validateButton.addEventListener('click', async function(e) {
    //     e.preventDefault();

    //     const productName = document.getElementById('productname').value;
    //     const price = document.getElementById('price').value;
    //     const description = document.getElementById('description').value;
    //     const stock = document.getElementById('stocks').value;
    //     const category = document.getElementById('category').value;

    //     if (productName === '' || price === '' || stock === '' || description === '' || category === '') {
    //         Swal.fire({
    //             title: 'Error!',
    //             text: "Please enter the required fields",
    //             icon: 'error'
    //         });
    //         return;
    //     }

    //     const formData = new FormData();
    //     formData.append('productName', productName);
    //     formData.append('price', price);
    //     formData.append('description', description);
    //     formData.append('stock', stock);
    //     formData.append('category', category);

    //     if (selectedFile) {
    //         formData.append('ProductImages', selectedFile);
    //     }

    //     try {
    //         const response = await fetch('/postaddproduct', {
    //             method: 'POST',
    //             body: formData
    //         });

    //         console.log(response);
    //         const data = await response.json();
    //         console.log("data in the frontend", data);
    //         if (data.success) {
    //             Swal.fire({
    //                 title: 'Success!',
    //                 text: data.message,
    //                 icon: 'success'
    //             });
    //             window.location.href = '/getproduct';
    //         } else {
    //             Swal.fire({
    //                 title: 'Error!',
    //                 text: data.message,
    //                 icon: 'error'
    //             });
    //         }
    //     } catch (error) {
    //         Swal.fire({
    //             title: 'Error!',
    //             text: 'An error occurred while processing the request.',
    //             icon: 'error'
    //         });
    //         console.error("An error occurred while processing the request:", error);
    //     }
    // });
//     document.addEventListener('DOMContentLoaded', function() {
//     const imageInput = document.getElementById('image');
//     const previewContainer = document.getElementById('previewContainer');
//     const validateButton = document.getElementById('validate');

//     imageInput.addEventListener('change', function(event) {
//         const fileInput = event.target;
//         previewContainer.innerHTML = ''; // Clear previous images

//         if (fileInput.files && fileInput.files.length > 0) {
//             for (let i = 0; i < fileInput.files.length; i++) {
//                 const reader = new FileReader();
//                 const imagePreviewContainer = document.createElement('div');
//                 imagePreviewContainer.classList.add('imagePreview');

//                 reader.onload = function(e) {
//                     imagePreviewContainer.innerHTML = `<img src="${e.target.result}" style="max-width: 100%;">`;
//                     imagePreviewContainer.style.display = 'block';
//                 };

//                 reader.readAsDataURL(fileInput.files[i]);
//                 previewContainer.appendChild(imagePreviewContainer);
//             }
//         }
//     });

//     validateButton.addEventListener('click', async function(e) {
//         e.preventDefault();

//         const productName = document.getElementById('productname').value;
//         const price = document.getElementById('price').value;
//         const description = document.getElementById('description').value;
//         const stock = document.getElementById('stocks').value;
//         const category = document.getElementById('category').value;

//         if (productName === '' || price === '' || stock === '' || description === '' || category === '') {
//             Swal.fire({
//                 title: 'Error!',
//                 text: "Please enter the required fields",
//                 icon: 'error'
//             });
//             return;
//         }

//         const formData = new FormData();
//         formData.append('productName', productName);
//         formData.append('price', price);
//         formData.append('description', description);
//         formData.append('stock', stock);
//         formData.append('category', category);

//         if (imageInput.files && imageInput.files.length > 0) {
//             for (let i = 0; i < imageInput.files.length; i++) {
//                 formData.append('ProductImages', imageInput.files[i]);
//             }
//         }

//         try {
//             const response = await fetch('/postaddproduct', {
//                 method: 'POST',
//                 body: formData
//             });

//             const data = await response.json();
//             if (data.success) {
//                 Swal.fire({
//                     title: 'Success!',
//                     text: data.message,
//                     icon: 'success'
//                 });
//                 window.location.href = '/getproduct';
//             } else {
//                 Swal.fire({
//                     title: 'Error!',
//                     text: data.message,
//                     icon: 'error'
//                 });
//             }
//         } catch (error) {
//             Swal.fire({
//                 title: 'Error!',
//                 text: 'An error occurred while processing the request.',
//                 icon: 'error'
//             });
//             console.error("An error occurred while processing the request:", error);
//         }
//     });
// });


document.addEventListener('DOMContentLoaded', function() {
    const imageInput = document.getElementById('image');
    const previewContainer = document.getElementById('previewContainer');
    const validateButton = document.getElementById('validate');

    let croppers = {};

    imageInput.addEventListener('change', function(event) {
        const fileInput = event.target;
        previewContainer.innerHTML = ''; // Clear previous images

        if (fileInput.files && fileInput.files.length > 0) {
            for (let i = 0; i < fileInput.files.length; i++) {
                const file = fileInput.files[i];
                const reader = new FileReader();
                const imageId = `imageToCrop_${i}`;

                const imagePreviewContainer = document.createElement('div');
                imagePreviewContainer.classList.add('imagePreview');
                imagePreviewContainer.style.position = 'relative';
                imagePreviewContainer.style.marginBottom = '10px';

                reader.onload = function(e) {
                    const img = document.createElement('img');
                    img.src = e.target.result;
                    img.style.maxWidth = '100%';
                    img.id = imageId;

                    imagePreviewContainer.appendChild(img);

                    // Create crop button
                    const cropButton = document.createElement('button');
                    cropButton.innerText = 'Crop Image';
                    cropButton.classList.add('btn', 'btn-primary', 'btn-sm');
                    cropButton.style.position = 'absolute';
                    cropButton.style.top = '10px';
                    cropButton.style.right = '10px';
                    cropButton.dataset.imageId = imageId;

                    imagePreviewContainer.appendChild(cropButton);

                    previewContainer.appendChild(imagePreviewContainer);

                    // Initialize Cropper.js
                    const cropper = new Cropper(img, {
                        aspectRatio: 1,
                        viewMode: 1,
                        autoCropArea: 1,
                        movable: true,
                        zoomable: true,
                        rotatable: true,
                        scalable: true,
                    });

                    croppers[imageId] = cropper;

                    cropButton.addEventListener('click', function() {
                        const cropper = croppers[this.dataset.imageId];
                        const canvas = cropper.getCroppedCanvas({
                            width: 200,
                            height: 200
                        });

                        canvas.toBlob(function(blob) {
                            const croppedImg = document.createElement('img');
                            croppedImg.src = URL.createObjectURL(blob);
                            imagePreviewContainer.innerHTML = ''; // Clear the container
                            imagePreviewContainer.appendChild(croppedImg); // Display cropped image
                        }, 'image/jpeg');
                    });
                };

                reader.readAsDataURL(file);
            }
        }
    });

    validateButton.addEventListener('click', async function(e) {
        e.preventDefault();

        const productName = document.getElementById('productname').value;
        const price = document.getElementById('price').value;
        const description = document.getElementById('description').value;
        const stock = document.getElementById('stocks').value;
        const category = document.getElementById('category').value;

        if (productName === '' || price === '' || stock === '' || description === '' || category === '') {
            Swal.fire({
                title: 'Error!',
                text: "Please enter the required fields",
                icon: 'error'
            });
            return;
        }

        const formData = new FormData();
        formData.append('productName', productName);
        formData.append('price', price);
        formData.append('description', description);
        formData.append('stock', stock);
        formData.append('category', category);

        for (let i = 0; i < imageInput.files.length; i++) {
            const file = imageInput.files[i];
            const cropper = croppers[`imageToCrop_${i}`];
            if (cropper) {
                const canvas = cropper.getCroppedCanvas({
                    width:175,
                    height:  225
                });
                const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));
                formData.append('ProductImages', blob, file.name);
            } else {
                formData.append('ProductImages', file);
            }
        }

        try {
            const response = await fetch('/postaddproduct', {
                method: 'POST',
                body: formData
            });

            const data = await response.json();
            if (data.success) {
                Swal.fire({
                    title: 'Success!',
                    text: data.message,
                    icon: 'success'
                });
                window.location.href = '/getproduct';
            } else {
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error'
                });
            }
        } catch (error) {
            Swal.fire({
                title: 'Error!',
                text: 'An error occurred while processing the request.',
                icon: 'error'
            });
            console.error("An error occurred while processing the request:", error);
        }
    });
});






			


	</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="admin-assets/vendor/global/global.min.js"></script>
	<script src="admin-assets/vendor/bootstrap-select/dist/js/bootstrap-select.min.js"></script>
    <script src="admin-assets/js/custom.min.js"></script>
	<script src="admin-assets/js/deznav-init.js"></script>
	
	<!-- Counter Up -->
    <script src="admin-assets/vendor/waypoints/jquery.waypoints.min.js"></script>
    <script src="admin-assets/vendor/jquery.counterup/jquery.counterup.min.js"></script>
	
	<!-- Datatable -->
    <script src="admin-assets/vendor/datatables/js/jquery.dataTables.min.js"></script>
	
	
	<script>
	(function($) {
	 
		var table = $('#example5').DataTable({
			searching: false,
			paging:true,
			select: false,
			//info: false,         
			lengthChange:false
		});
		$('#example tbody').on('click', 'tr', function () {
			var data = table.row( this ).data();
			
		});
	   
	})(jQuery);
	</script>
	
</body>
</html>